{"ast":null,"code":"var _jsxFileName = \"/Users/kakumsarmah/KAKUS/MyWork/interview2023/my-movies/src/shared/Star/Star.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarRating = props => {\n  const {\n    rating\n  } = props;\n  const noOfStar = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: noOfStar.map(value =>\n    /*#__PURE__*/\n    // <Star\n    //     key={value}\n    //     filled={value <= rating / 2}\n    // />\n    _jsxDEV(\"span\", {\n      style: {\n        color: value <= rating / 2 ? 'orange' : 'gray'\n      },\n      children: \"\\u2605\"\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = StarRating;\nconst Star = _ref => {\n  let {\n    filled\n  } = _ref;\n  // adds CSS for color\n  const starStyle = {\n    color: filled ? 'orange' : 'gray'\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: starStyle,\n    children: \"\\u2605\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Star;\nexport default StarRating;\nvar _c, _c2;\n$RefreshReg$(_c, \"StarRating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StarRating","props","rating","noOfStar","children","map","value","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","Star","_ref","filled","starStyle","_c2","$RefreshReg$"],"sources":["/Users/kakumsarmah/KAKUS/MyWork/interview2023/my-movies/src/shared/Star/Star.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst StarRating = (props) => {\n    const { rating } = props;\n    const noOfStar = [1, 2, 3, 4, 5]\n\n    return (\n        <div>\n\n            {noOfStar.map((value) => (\n                // <Star\n                //     key={value}\n                //     filled={value <= rating / 2}\n                // />\n                <span key={value} style={{color: value <= rating / 2 ? 'orange' : 'gray'}} >★</span>\n            ))}\n\n        </div>\n    );\n};\n\nconst Star = ({ filled }) => {\n   // adds CSS for color\n    const starStyle = {\n        color: filled ? 'orange' : 'gray',\n    };\n\n    return <span style={starStyle}>★</span>;\n};\n\nexport default StarRating;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxB,MAAME,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEhC,oBACIJ,OAAA;IAAAK,QAAA,EAEKD,QAAQ,CAACE,GAAG,CAAEC,KAAK;IAAA;IAChB;IACA;IACA;IACA;IACAP,OAAA;MAAkBQ,KAAK,EAAE;QAACC,KAAK,EAAEF,KAAK,IAAIJ,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG;MAAM,CAAE;MAAAE,QAAA,EAAE;IAAC,GAAlEE,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmE,CACtF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAACC,EAAA,GAjBIb,UAAU;AAmBhB,MAAMc,IAAI,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACrB;EACC,MAAME,SAAS,GAAG;IACdT,KAAK,EAAEQ,MAAM,GAAG,QAAQ,GAAG;EAC/B,CAAC;EAED,oBAAOjB,OAAA;IAAMQ,KAAK,EAAEU,SAAU;IAAAb,QAAA,EAAC;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3C,CAAC;AAACM,GAAA,GAPIJ,IAAI;AASV,eAAed,UAAU;AAAC,IAAAa,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}